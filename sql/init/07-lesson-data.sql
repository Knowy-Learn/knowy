INSERT INTO public.lesson (id_course, id_next_lesson, title, explanation)
VALUES (1, 2, 'Introducci√≥n al curso',
        '¬°Te damos la bienvenida al curso de Java b√°sico! En este curso podr√°s estudiar peque√±as p√≠ldoras conceptuales del apasionante lenguaje de programaci√≥n que es Java. Java es el medio que estructura much√≠simas aplicaciones que utilizas en tu d√≠a a d√≠a, y para ello te pondremos unos cuantos ejemplos:
Java funda la estructura funcional (el backend) de aplicaciones web como Netflix, Amazon, Spotify y Linkedin.
Aunque en muchos casos migraron o est√°n migrando a lenguaje Kotlin (basado tambi√©n en Java), estructura la l√≥gica de multitud de clientes Android, desde la aplicaci√≥n de Spotify hasta la aplicaci√≥n m√≥vil original de Twitter.
Es el lenguaje original del archiconocido juego Minecraft, y el que le dio su caracter√≠stica de ser f√°cilmente personalizable (mods).

¬°Esperamos que este curso despierte tu inter√©s por seguir aprendiendo! A lo largo de estas lecciones breves pero clave, conocer√°s los fundamentos que hacen de Java un lenguaje tan vers√°til y duradero. Ya sea que quieras desarrollar aplicaciones web, m√≥viles o incluso videojuegos, dominar los conceptos b√°sicos de Java te dar√° una base s√≥lida para avanzar con confianza en el mundo de la programaci√≥n.
Recuerda que nadie nace sabiendo: aprender a programar es un proceso, y equivocarse forma parte del camino. En un mundo cada vez m√°s digital, conocer al menos un lenguaje de programaci√≥n no solo es una ventaja, sino una habilidad cada vez m√°s necesaria. ¬°As√≠ que √°nimo, y manos a la obra!
'),

	   (1, 3, '¬øQu√© es Java y c√≥mo funciona?', '<p>Java es un <b>lenguaje de programaci√≥n moderno</b>, robusto y orientado a objetos. Fue creado para permitir que un mismo programa pudiera ejecutarse en distintos sistemas operativos sin necesidad de adaptaciones.</p><br>
	<h2>Caracter√≠sticas clave:</h2>
	<ul>
		<li><b>Multiplataforma:</b> Gracias a la JVM (Java Virtual Machine), un programa Java puede ejecutarse en Windows, Linux o Mac sin cambiar el c√≥digo.</li>
		<li><b>Orientado a objetos:</b> Todo se estructura en torno a clases y objetos, lo que permite organizar el c√≥digo de forma modular y reutilizable.</li>
		<li><b>Fuertemente tipado:</b> el lenguaje obliga a declarar con claridad qu√© tipo de datos se est√°n utilizando, lo que ayuda a evitar errores.</li>
	</ul>

	<h2>¬øC√≥mo funciona Java?</h2>
	<ol type="1">
		<li>Escribes el c√≥digo en un archivo <div class="code-example">.java.</div></li>
		<li>Lo compilas con el <b>JDK (Java Development Kit)</b>, que lo convierte en <b>bytecode</b> <div class="code-example">(.class).</div></li>
		<li>Ese bytecode es ejecutado por la <b>JVM (Java Virtual Machine)</b>, que lo interpreta seg√∫n el sistema donde se encuentre.</li>
	</ol>'),
	   (1, 4, 'Variables. Estructura b√°sica.', '<p>En Java, una <b>variable</b> es un espacio en la memoria en el que guardamos un dato. Para usar una variable, primero <b>debemos indicar qu√© tipo de dato va a almacenar</b>, darle un <b>nombre</b> y asignarle un <b>valor</b>.</p>

<h2>Estructura b√°sica de una variable</h2>
<ul>
<li>
	<div class="code-example">
		<div style="color:orange; display:inline">tipo</div> nombre =
        <div style="color:blue; display:inline">valor</div>;
	</div>
</li>
</ul>


<em>Por ejemplo:</em>
<br>

<ul>
<li>
<div class="code-example">
	<div style="color:orange; display:inline">int</div> edad =
    <div style="color:blue; display:inline">30</div>;
</div>
</li>
</ul>

Esto le indica al programa:
<ul>
<li>que vas a guardar un n√∫mero entero
	<div class="code-example" style="color:orange; display:inline">
    (int).
    </div>
</li>
<li>en una variable llamada edad.</li>
<li>y de forma opcional podemos a√±adir su valor inicial, que en este caso ser√° <div class="code-example" style="color:blue; display:inline">30.</div> </li>
</ul>

'),
	   (1, 5, 'Variables. Tipos primitivos.', '<h2>Tipos primitivos</h2>
	<p>Son los tipos de datos m√°s b√°sicos del lenguaje y que preceden a java. Ocupan poca memoria y no tienen comportamientos asociados (que m√°s tarde llamaremos m√©todos).<p>

	<table>
		<tr>
			<th>TIPO</th>
			<th>DESCRIPCI√ìN</th>
			<th>EJEMPLO</th>
		</tr>
		<tr>
			<td><b>int</b></td>
			<td>Representa a los n√∫meros reales, es decir, aquellos que no tienen decimales.</td>
			<td>int edad = 30;</td>
		</tr>
		<tr>
			<td><b>float</b></td>
			<td>Representa a los n√∫meros decimales con poca precisi√≥n. A la hora de inicializarla es necesario escribir una f al final de su valor.</td>
			<td>float altura = 1.70f;</td>
		</tr>
		<tr>
			<td><b>double</b></td>
			<td>Representa a los n√∫meros decimales con mayor precisi√≥n.</td>
			<td>double altura = 1.756;</td>
		</tr>
		<tr>
			<td><b>char</b></td>
			<td>Representa un solo car√°cter Unicode. Se escribe entre comillas simples.</td>
			<td>char letra = ‚ÄòA‚Äô;</td>
		</tr>
		<tr>
			<td><b>boolean</b></td>
			<td>Representa un valor l√≥gico: true o false. Muy usado en condiciones.</td>
			<td>boolean activo = true;</td>
		</tr>
	</table>



	<p>üìù <b>Nota:</b> Existen otros tipos primitivos como byte, short y long, pero se usan
	con menos frecuencia en proyectos b√°sicos.</p>'),
	   (1, 6, 'Manejo de Excepciones', 'C√≥mo usar try, catch y finalmente para controlar errores.'),
	   (1, 7, 'Manejo de Excepciones', 'C√≥mo usar try, catch y finalmente para controlar errores.'),
	   (1, 8, 'Manejo de Excepciones', 'C√≥mo usar try, catch y finalmente para controlar errores.'),
	   (1, 9, 'Manejo de Excepciones', 'C√≥mo usar try, catch y finalmente para controlar errores.');


INSERT INTO public.lesson (id_course, id_next_lesson, title, explanation)
VALUES (2, 6, 'Colecciones en Java', 'Descripci√≥n detallada de List, Set, Map y sus implementaciones.'),
	   (2, 7, 'Programaci√≥n Funcional', 'Introducci√≥n a lambdas y streams en Java 8 y superior.'),
	   (2, 8, 'Concurrency y Multihilo', 'Manejo de threads y sincronizaci√≥n en Java.'),
	   (2, NULL, 'Buenas Pr√°cticas y Patrones', 'Patrones de dise√±o comunes y mejores pr√°cticas en Java.');

INSERT INTO public.lesson (id_course, id_next_lesson, title, explanation)
VALUES (3, 10, 'Introducci√≥n a Servlets', 'Conceptos b√°sicos sobre Servlets y ciclo de vida.'),
	   (3, NULL, 'Frameworks Web', 'Visi√≥n general de frameworks como Spring y JSF para desarrollo web.');
